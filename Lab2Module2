#define E1 6
#define M1 7
#define E2 5
#define M2 4
#define BTN 8
#define LED 10
#define ENC_R 2
#define ENC_L 3

float desiredVelocity=0.3;
int PWM = 128;
int val = 0;
int wheelCount=0;

//initialize time
  int volatile time1 = 0;
  int volatile time2 = 0;

//speed left and right
float speedleft;
float speedright;
int leftSpeedValue;

void setup() {

//right encoder
  pinMode(E1, OUTPUT);
  pinMode(M1, OUTPUT);
//left encoder
  pinMode(E2, OUTPUT);
  pinMode(M2, OUTPUT);
  

    //pin assignment for wheel encoders
  pinMode(ENC_R, INPUT);
  pinMode(ENC_L, INPUT);
 
  /*
  attachInterrupt(digitalPinToInterrupt(ENC_R), readspeed1, CHANGE);
  attachInterrupt(digitalPinToInterrupt(ENC_L), readspeed2, CHANGE);
  */

  Serial.begin(9600);
  delay(100);
}

void loop() {

 //initialize wheel as input
 if(wheelCount==0)
   {
      digitalWrite(M1, HIGH);
      digitalWrite(M2, HIGH);                                       
      analogWrite(E1, PWM);                                   
      analogWrite(E2, PWM);

      countEncoderL();
   }
   
    while(wheelCount<48)
    {
      digitalWrite(M1, HIGH);
      digitalWrite(M2, HIGH);   
      countEncoderL();

      if(speedleft!=desiredVelocity)
       {

         increment ();

       }
      
      analogWrite(E1, PWM);  
      delay(10);
      //because countEncoderL is called again, need to stop
      if(wheelCount==48)
      {
        analogWrite(E2, 0);
        analogWrite(E1, 0);  
      }
    }
 }

int countEncoderL(){
  while(1){
    if(digitalRead(ENC_L)==LOW)
    {
      while(1){
        if(digitalRead(ENC_L)==HIGH)
        {
            wheelCount++;
        return wheelCount;
        }
      }
    }
  }
}
   void readspeed1()
  {
    time2 = millis();
    float t = time2 - time1; //calculate time
    float d = ENC_R*20.11/16;//calculate distance
    float speedright = d/t;//calculate speed
    /*
    Serial.println("Speed of right motor is: ");
    Serial.println(speedright);
    */
    time1 = millis();
  }

  //calculate speed of motor 2
  /*
    void readspeed2()
  {
    time2 = millis();
    float t = time2 - time1; //calculate time
    float d = ENC_L*20.11/16 ;//calculate distance cm/tick
    float speedleft = d/t; //calculate speed
    Serial.println("Speed of left motor is: ");
    Serial.println( speedleft);
    time1 = millis();
    }
    */
    
    void increment()
{
    int leftSpeedInc = 0.5 * round(32*(desiredVelocity-speedleft));
    leftSpeedValue = (speedleft + leftSpeedInc);
    Serial.println(leftSpeedValue);
    analogWrite(E2, leftSpeedValue); 
    delay(100);
   
}
